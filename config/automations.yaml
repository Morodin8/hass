- id: '1620397620509'
  alias: Someone at the door
  description: Doorbell
  trigger:
  - type: turned_on
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.doorbell
    domain: binary_sensor
  condition: []
  action:
  - service: notify.mobile_app_GrayS10
    data:
      message: Someone's at the door
  - service: notify.mobile_app_susans10
    data:
      message: Someone's at the door
  - service: notify.gmail
    data:
      message: Someone's at the door
      title: Doorbell
  - service: notify.hotmail
    data:
      message: Someone's at the door
      title: Doorbell
  - service: media_player.volume_set
    target:
      entity_id: media_player.house
    data:
      volume_level: 0.7
  - service: media_player.play_media
    target:
      entity_id: media_player.house
    data:
      media_content_type: music
      media_content_id: media-source://media_source/Doorbell.mp3
  mode: single
- id: '1622036751338'
  alias: Sonoff off
  description: ''
  trigger:
  - type: not_connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
  condition: []
  action:
  - service: notify.hotmail
    data:
      message: Sonoff off
      title: Sonoff off
  mode: single
- id: '1622038959427'
  alias: Sonoff on
  description: ''
  trigger:
  - type: connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
  condition: []
  action:
  - service: notify.hotmail
    data:
      message: Sonoff on
      title: Sonoff on
  mode: single
- id: '1626626196495'
  alias: Power tripped
  description: ''
  trigger:
  - type: not_connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
    for:
      hours: 0
      minutes: 20
      seconds: 0
      milliseconds: 0
  condition: []
  action:
  - service: notify.mobile_app_susans10
    data:
      message: Power tripped
  - service: notify.mobile_app_grays10
    data:
      message: Power tripped
  - service: notify.gmail
    data:
      message: Power tripped
      title: Power tripped
  - service: notify.hotmail
    data:
      message: Power tripped
      title: Power tripped
  mode: single
- id: '1627304083229'
  alias: Thermostat off
  description: ''
  trigger:
  - platform: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    domain: climate
    entity_id: climate.nest_thermometer
    type: hvac_mode_changed
    to: 'off'
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Thermostat off
  - service: notify.gmail
    data:
      message: Thermostat off
      title: Thermostat off
  - service: notify.hotmail
    data:
      message: Thermostat off
      title: Thermostat off
  mode: single
- id: '1627304320339'
  alias: Thermostat heat
  description: ''
  trigger:
  - platform: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    domain: climate
    entity_id: climate.nest_thermometer
    type: hvac_mode_changed
    to: heat
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Thermostat heat
  - service: notify.gmail
    data:
      message: Thermostat heat
      title: Thermostat heat
  - service: notify.hotmail
    data:
      message: Thermostat heat
      title: Thermostat heat
  mode: single
- id: '1630512391225'
  alias: Blinds Open (AM)
  description: Open the blinds in the morning
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:30:00
  condition:
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8] |
        map(attribute=''temperature'') | list | max >= 19 }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8]
          | map(attribute=''temperature'') | list | max < 19 }}'
      - condition: template
        value_template: '"{{ state_attr(''weather.huis_hourly'', ''forecast'')[:7]
          | selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list
          | count > 0 }}"'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: "Blinds Open (AM) {{ state_attr('weather.huis_hourly', 'forecast')[:8]\
        \ |\n  map(attribute='temperature') | list | max }}, {{\nstate_attr('weather.huis_hourly',\
        \ 'forecast')[3:7] | list |\nmap(attribute='condition') | unique | list }}"
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  mode: single
- id: '1630673076060'
  alias: Blinds Close (Cold)
  description: Close the blinds when it is cold
  trigger:
  - platform: sun
    event: sunset
    id: sunset
  - platform: numeric_state
    entity_id: climate.nest_thermometer
    attribute: current_temperature
    below: '20'
  condition:
  - condition: or
    conditions:
    - type: is_temperature
      condition: device
      device_id: b19694817d3e24bb0e046ae4cb59061d
      entity_id: sensor.nest_thermometer_temperature
      domain: sensor
      below: 20
    - condition: state
      entity_id: climate.nest_thermometer
      attribute: hvac_action
      state: heating
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:2] |
        map(attribute=''temperature'') | list | min < 15 }}'
  - condition: sun
    before: sunrise
    after: sunset
    before_offset: '24:00:00'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: "Blinds Close (Cold), thermometer {{ state_attr('climate.nest_thermometer',\
        \ 'current_temperature') }}, forecast {{ state_attr('weather.huis_hourly',\
        \ 'forecast')[:2] |\n  map(attribute='temperature') | list | min }}"
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  mode: single
- id: '1631017824414'
  alias: Blinds Open (Hot)
  description: Open the blinds in the evening if it is hot
  trigger:
  - platform: sun
    event: sunset
    offset: -02:00:00
  condition:
  - type: is_temperature
    condition: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    entity_id: sensor.nest_thermometer_temperature
    domain: sensor
    above: 22
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 5
      minutes: 0
      seconds: 0
      milliseconds: 0
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Open (Hot), {{ state_attr('climate.nest_thermometer', 'current_temperature')
        }}
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  mode: single
- id: '1631786801519'
  alias: Weather forecast
  description: weather max temp
  trigger:
  - platform: time
    at: 08:15
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Weather forecast {{ state_attr('weather.huis_hourly', 'forecast')[:8]
        | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[3:7] | list | map(attribute='condition') | unique | list }}
  mode: single
- id: '1632209378852'
  alias: Blinds Close (Forecast Hot Sun)
  description: Close the blinds when the forecast says it is going to be hot
  trigger:
  - platform: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:7] | map(attribute=''temperature'')
      | list | max > 23 }}'
  condition:
  - condition: sun
    before: sunset
    before_offset: -06:00:00
    after: sunrise
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:7] |
        map(attribute=''temperature'') | list | max > 23 }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:7]
          | map(attribute=''temperature'') | list | max > 20 }}'
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[3:7]
            | selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list
            | count > 0 }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Forecast Hot Sun) {{ state_attr('weather.huis_hourly',
        'forecast')[:7] | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[3:7] | selectattr('condition', 'in', ['sunny', 'partlycloudy'])
        | list | map(attribute='condition') | unique | list }}
  mode: single
- id: '1632210788661'
  alias: Blinds Close (Forecast Hot)
  description: Close the blinds when the forecast says it is going to be hot
  trigger:
  - platform: time
    at: 08:45
  condition:
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8] |
        map(attribute=''temperature'') | list | max > 23 }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8]
          | map(attribute=''temperature'') | list | max > 20 }}'
      - condition: template
        value_template: '"{{ state_attr(''weather.huis_hourly'', ''forecast'')[3:7]
          | selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list
          | count > 0 }}"'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Forecast Hot)  {{ state_attr('weather.huis_hourly', 'forecast')[:8]
        | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[3:7] | selectattr('condition', 'in', ['sunny', 'partlycloudy'])
        | list | map(attribute='condition') | unique | list }}
  mode: single
- id: '1632491139519'
  alias: Blinds Close (Hot)
  description: Close the blinds when it is hot
  trigger:
  - platform: numeric_state
    entity_id: climate.nest_thermometer
    attribute: current_temperature
    above: '23'
  condition:
  - condition: sun
    before: sunset
    before_offset: -06:00:00
    after: sunrise
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 5
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:5] | selectattr(''condition'',
      ''in'', [''sunny'', ''partlycloudy'']) | list | count > 0 }}'
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:5] | map(attribute=''temperature'')
      | list | max > 19 }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Hot), thermometer {{ state_attr('climate.nest_thermometer','current_temperature')
        }},  forecast {{ state_attr('weather.huis_hourly', 'forecast')[:5] | map(attribute='temperature')
        | list | max }}, {{ state_attr('weather.huis_hourly', 'forecast')[:5] | map(attribute='condition')
        | unique | list }}
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  mode: single
- id: '1632995350298'
  alias: Blinds Open (Sunny)
  description: Open the blinds when it is cold but sunny
  trigger:
  - platform: time_pattern
    minutes: '1'
  condition:
  - condition: sun
    before: sunset
    before_offset: -03:00:00
    after: sunrise
    after_offset: 02:00:00
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].temperature
      < 19 }}'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].condition
        == ''sunny'' }}'
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].condition
        == ''partlycloudy'' }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Open (Sunny) {{ state_attr('weather.huis_hourly', 'forecast')[0].temperature
        }}, {{ state_attr('weather.huis_hourly', 'forecast')[:3] | map(attribute='condition')
        | list }}
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  mode: single
- id: '1634035203091'
  alias: Heating
  description: ''
  trigger:
  - platform: state
    entity_id: climate.nest_thermometer
    attribute: hvac_action
    id: heating_action
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
        {{ state_attr('climate.nest_thermometer','current_temperature') }}
  - service: notify.gmail
    data:
      message: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
        {{ state_attr('climate.nest_thermometer','current_temperature') }}
      title: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
        {{ state_attr('climate.nest_thermometer','current_temperature') }}
  - service: notify.hotmail
    data:
      message: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
        {{ state_attr('climate.nest_thermometer','current_temperature') }}
      title: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
        {{ state_attr('climate.nest_thermometer','current_temperature') }}
  mode: single
