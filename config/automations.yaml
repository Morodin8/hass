- id: '1620397620509'
  alias: Someone at the door
  description: Doorbell
  trigger:
  - type: turned_on
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.doorbell
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.someone_at_the_door.attributes.last_triggered,
      0) | int > 2*60 }}'
  action:
  - service: notify.mobile_app_GrayS10
    data:
      message: Someone at the door {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
  - service: notify.mobile_app_susans10
    data:
      message: Someone at the door
  - service: notify.gmail
    data:
      message: Someone at the door {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
      title: Doorbell
  - service: media_player.play_media
    target:
      entity_id: media_player.house
    data:
      media_content_id: media-source://media_source/local/Doorbell.m4a
      media_content_type: audio/mp4
    metadata:
      title: Doorbell.m4a
      thumbnail:
      media_class: music
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://media_source
  mode: single
- id: '1622036751338'
  alias: Sonoff off
  description: ''
  trigger:
  - type: not_connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.sonoff_off.attributes.last_triggered,
      0) | int > (15*60) }}'
  action:
  - service: notify.hotmail
    data:
      message: Sonoff off at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
      title: Sonoff off
  mode: single
- id: '1622038959427'
  alias: Sonoff on
  description: ''
  trigger:
  - type: connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.sonoff_off.attributes.last_triggered,
      0) > as_timestamp(states.automation.sonoff_on.attributes.last_triggered, 0)
      }}'
  action:
  - service: notify.hotmail
    data:
      message: Sonoff on at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
      title: Sonoff on
  mode: single
- id: '1626626196495'
  alias: Power tripped
  description: ''
  trigger:
  - type: not_connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
    for:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.power_tripped.attributes.last_triggered,
      0) | int > (5*60*60) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Power tripped at {{ (as_timestamp(now()) - hours*60*60) | timestamp_custom('%H:%M')
        }}
  - service: notify.hotmail
    data:
      message: Power tripped at {{ (as_timestamp(now()) - hours*60*60) | timestamp_custom('%H:%M')
        }}
      title: Power tripped
  variables:
    hours: 3
  mode: single
- id: '1627304083229'
  alias: Thermostat off
  description: ''
  trigger:
  - platform: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    domain: climate
    entity_id: climate.nest_thermometer
    type: hvac_mode_changed
    to: 'off'
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Thermostat off at {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
  - service: notify.gmail
    data:
      message: Thermostat off at {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
      title: Thermostat off
  mode: single
- id: '1627304320339'
  alias: Thermostat heat
  description: ''
  trigger:
  - platform: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    domain: climate
    entity_id: climate.nest_thermometer
    type: hvac_mode_changed
    to: heat
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Thermostat heat at {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
  mode: single
- id: '1630512391225'
  alias: Blinds Open (AM)
  description: Open the blinds in the morning
  trigger:
  - platform: sun
    event: sunrise
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.blinds_open_sunny.attributes.last_triggered,
      0) | int > (12*60*60) }}'
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8] |
        map(attribute=''temperature'') | list | max >= temp }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8]
          | map(attribute=''temperature'') | list | max < temp }}'
      - condition: template
        value_template: '"{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8]
          | selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list
          | count > 0 }}"'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Open (AM), {{ state_attr('weather.huis_hourly', 'forecast')[:8]
        | map(attribute='temperature') | list | max }}, {{ state_attr('weather.huis_hourly',
        'forecast')[:8] | list | map(attribute='condition') | unique | list }} at
        {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  variables:
    temp: 15
  mode: single
- id: '1630673076060'
  alias: Blinds Close (Cold)
  description: Close the blinds when it is cold
  trigger:
  - platform: sun
    event: sunset
    id: sunset
    offset: -01:00:00
  - platform: numeric_state
    entity_id: climate.nest_thermometer
    attribute: current_temperature
    below: '22'
  - platform: template
    value_template: '{{ states(''weather.huis'') != ''sunny'' }}

      '
  - platform: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].temperature
      < 5 }}

      '
  - platform: time_pattern
    minutes: '1'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - last_triggered | int > (2*60*60) }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.blinds_open_sunny.attributes.last_triggered,
      0) | int > (60*60) }}'
  - condition: or
    conditions:
    - condition: sun
      before: sunrise
      after: sunset
      before_offset: '24:00:00'
      after_offset: '-1:00:00'
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:2] |
        selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list |
        count == 0 }}'
  - condition: or
    conditions:
    - type: is_temperature
      condition: device
      device_id: b19694817d3e24bb0e046ae4cb59061d
      entity_id: sensor.nest_thermometer_temperature
      domain: sensor
      below: 22
    - condition: state
      entity_id: climate.nest_thermometer
      attribute: hvac_action
      state: heating
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:2] |
        map(attribute=''temperature'') | list | min < 10 }}'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ new_day }}'
    - condition: template
      value_template: '{{ last_triggered < as_timestamp(states.automation.blinds_open_sunny.attributes.last_triggered,
        0) }}'
    - condition: template
      value_template: '{{ last_triggered < as_timestamp(states.automation.blinds_open_am.attributes.last_triggered,
        0) }}'
    - condition: template
      value_template: '{{ last_triggered < as_timestamp(states.automation.blinds_open_hot.attributes.last_triggered,
        0) }}'
  - service: notify.mobile_app_grays10
    data:
      message: "Blinds Close (Cold), thermometer {{ state_attr('climate.nest_thermometer',\
        \ 'current_temperature') }}, forecast {{ state_attr('weather.huis_hourly',\
        \ 'forecast')[:2] |\n  map(attribute='temperature') | list | min }}, {{ state_attr('weather.huis_hourly',\n\
        'forecast')[:2] | map(attribute='condition') | list }} at {{ as_timestamp(now())\
        \ | timestamp_custom('%H:%M') }}"
  variables:
    last_triggered: '{{ as_timestamp(states.automation.blinds_close_cold.attributes.last_triggered,
      0) }}'
    new_day: '{{ as_datetime(last_triggered).day != now().day and now() > today_at(''09:02'')
      }}'
  mode: single
- id: '1631017824414'
  alias: Blinds Open (Hot)
  description: Open the blinds in the evening if it is hot
  trigger:
  - platform: sun
    event: sunset
    offset: -02:00:00
  condition:
  - type: is_temperature
    condition: device
    device_id: b19694817d3e24bb0e046ae4cb59061d
    entity_id: sensor.nest_thermometer_temperature
    domain: sensor
    above: 23
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 3
      minutes: 0
      seconds: 0
      milliseconds: 0
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Open (Hot), {{ state_attr('climate.nest_thermometer', 'current_temperature')
        }} at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  mode: single
- id: '1631786801519'
  alias: Weather forecast
  description: weather max temp
  trigger:
  - platform: time
    at: 08:15
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Weather forecast {{ state_attr('weather.huis_hourly', 'forecast')[:8]
        | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[:8] | list | map(attribute='condition') | unique | list }}
  mode: single
- id: '1632209378852'
  alias: Blinds Close (Forecast Hot Sun)
  description: Close the blinds when the forecast says it is going to be hot
  trigger:
  - platform: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[3:7] | selectattr(''condition'',
      ''in'', [''sunny'', ''partlycloudy'']) | list | count > 0 }}

      '
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.blinds_close_forecast_hot_sun.attributes.last_triggered,
      0) | int > (12*60*60) }}'
  - condition: sun
    before: sunset
    before_offset: -06:00:00
    after: sunrise
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:7] | map(attribute=''temperature'')
      | list | max > 20 }}'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Forecast Hot Sun), {{ state_attr('weather.huis_hourly',
        'forecast')[:7] | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[3:7] | selectattr('condition', 'in', ['sunny', 'partlycloudy'])
        | list | map(attribute='condition') | unique | list }} at {{ as_timestamp(now())
        | timestamp_custom('%H:%M') }}
  mode: single
- id: '1632210788661'
  alias: Blinds Close (Forecast Hot)
  description: Close the blinds when the forecast says it is going to be hot
  trigger:
  - platform: time
    at: 08:45
  condition:
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8] |
        map(attribute=''temperature'') | list | max > 23 }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:8]
          | map(attribute=''temperature'') | list | max > 20 }}'
      - condition: template
        value_template: '"{{ state_attr(''weather.huis_hourly'', ''forecast'')[3:7]
          | selectattr(''condition'', ''in'', [''sunny'', ''partlycloudy'']) | list
          | count > 0 }}"'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Forecast Hot), {{ state_attr('weather.huis_hourly', 'forecast')[:8]
        | map(attribute='temperature') | list | max }},  {{ state_attr('weather.huis_hourly',
        'forecast')[3:7] | selectattr('condition', 'in', ['sunny', 'partlycloudy'])
        | list | map(attribute='condition') | unique | list }} at {{ as_timestamp(now())
        | timestamp_custom('%H:%M') }}
  mode: single
- id: '1632491139519'
  alias: Blinds Close (Hot)
  description: Close the blinds when it is hot
  trigger:
  - platform: numeric_state
    entity_id: climate.nest_thermometer
    attribute: current_temperature
    above: '23'
  condition:
  - condition: sun
    before: sunset
    before_offset: -06:00:00
    after: sunrise
  - condition: state
    entity_id: climate.nest_thermometer
    state: 'off'
    attribute: hvac_action
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:5] | selectattr(''condition'',
      ''in'', [''sunny'', ''partlycloudy'']) | list | count > 0 }}'
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[:5] | map(attribute=''temperature'')
      | list | max > 19 }}'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: close
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Close (Hot), thermometer {{ state_attr('climate.nest_thermometer','current_temperature')
        }},  forecast {{ state_attr('weather.huis_hourly', 'forecast')[:5] | map(attribute='temperature')
        | list | max }}, {{ state_attr('weather.huis_hourly', 'forecast')[:5] | map(attribute='condition')
        | unique | list }} at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  mode: single
- id: '1632995350298'
  alias: Blinds Open (Sunny)
  description: Open the blinds when it is cold but sunny
  trigger:
  - platform: sun
    event: sunrise
    offset: 02:00:00
  - platform: template
    value_template: '{{ states(''weather.huis'') == ''sunny'' or states(''weather.huis'')
      == ''partlycloudy'' }}

      '
  - platform: time_pattern
    minutes: '1'
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - last_triggered | int > (2*60*60) }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.blinds_close_cold.attributes.last_triggered,
      0) | int > (60*60) }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.blinds_open_am.attributes.last_triggered,
      0) | int > (12*60*60) }}'
  - condition: sun
    before: sunset
    before_offset: -03:00:00
    after: sunrise
    after_offset: 02:00:00
  - condition: template
    value_template: '{{ (now().month <= spring and now().month >= autumn) or ((now().weekday()
      != 6 and now() > today_at(''09:00'')) or (now().weekday() == 6 and now() > today_at(''10:00'')))
      }}'
  - condition: template
    value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].temperature
      < 19 }}'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].condition
        == ''sunny'' }}'
    - condition: and
      conditions:
      - condition: template
        value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[0].condition
          == ''partlycloudy'' }}'
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ now().month >= spring and now().month <= autumn }}'
        - condition: template
          value_template: '{{ state_attr(''weather.huis_hourly'', ''forecast'')[1].condition
            == ''sunny'' }}'
  action:
  - device_id: 7171a7316f4a8d109003d570def12f26
    domain: cover
    entity_id: cover.somfy_cover
    type: open
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ new_day }}'
    - condition: template
      value_template: '{{ last_triggered < as_timestamp(states.automation.blinds_close_cold.attributes.last_triggered,
        0) }}'
    - condition: template
      value_template: '{{ last_triggered < as_timestamp(states.automation.blinds_close_forecast_hot_sun.last_triggered,
        0) }}'
  - service: notify.mobile_app_grays10
    data:
      message: Blinds Open (Sunny), {{ state_attr('weather.huis_hourly', 'forecast')[0].temperature
        }}, {{ state_attr('weather.huis_hourly', 'forecast')[:3] | map(attribute='condition')
        | list }} at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  variables:
    last_triggered: '{{ as_timestamp(states.automation.blinds_open_sunny.attributes.last_triggered,
      0) }}'
    new_day: '{{ as_datetime(last_triggered).day != now().day }}'
    spring: 3
    autumn: 9
  mode: single
- id: '1634035203091'
  alias: Heating
  description: ''
  trigger:
  - platform: state
    entity_id: climate.nest_thermometer
    attribute: hvac_action
    id: heating_action
  condition:
  - condition: template
    value_template: '{{ now().month >= 4 and now().month <= 10 }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }}),
        Current {{ state_attr('climate.nest_thermometer','current_temperature') }},
        Target {{ state_attr('climate.nest_thermometer','temperature') }} at {{ as_timestamp(now())
        | timestamp_custom('%H:%M') }}
  mode: single
- id: '1636735120825'
  alias: Heating (log)
  description: ''
  trigger:
  - platform: state
    entity_id: climate.nest_thermometer
    attribute: hvac_action
    id: heating_action
  condition: []
  action:
  - service: notify.hotmail
    data:
      message: '{{ state_attr(''climate.nest_thermometer'',''hvac_action'') }}, Current
        {{ state_attr(''climate.nest_thermometer'',''current_temperature'') }}, Target
        {{ state_attr(''climate.nest_thermometer'',''temperature'') }} at {{ as_timestamp(now())
        | timestamp_custom(''%H:%M'') }}'
      title: Heating ({{ state_attr('climate.nest_thermometer','hvac_action') }})
  mode: single
- id: '1636991770084'
  alias: Heating Up
  description: Notify if heating is set above 23
  trigger:
  - platform: template
    value_template: '{{state_attr(''climate.nest_thermometer'', ''temperature'') >=
      23}}'
  condition: []
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Heating Up ({{ state_attr('climate.nest_thermometer','temperature')
        }}), current {{ state_attr('climate.nest_thermometer','current_temperature')
        }} at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  mode: single
- id: '1637413245698'
  alias: Power on
  description: When power tripped, notify when power is back on
  trigger:
  - type: connected
    platform: device
    device_id: 3eac44964fe96fdd91db660770d79665
    entity_id: binary_sensor.sonoff_rf_bridge_status
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.power_tripped.attributes.last_triggered,
      0) > as_timestamp(states.automation.power_on.attributes.last_triggered, 0) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: Power on at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
  - service: notify.hotmail
    data:
      message: Power on at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
      title: Power on
  mode: single
- id: '1637745092665'
  alias: emon off
  description: Notify when emon disconnected
  trigger:
  - type: not_connected
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: binary_sensor.emon_status
    domain: binary_sensor
    for:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_off.attributes.last_triggered,
      0) | int > (30*60) }}'
  action:
  - service: notify.hotmail
    data:
      message: emon off at {{ (as_timestamp(now()) - 60) | timestamp_custom('%H:%M')
        }}
      title: emon off
  mode: single
- id: '1637768862576'
  alias: emon on
  description: When emon disconnected, notify when connected
  trigger:
  - type: connected
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: binary_sensor.emon_status
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.emon_off.attributes.last_triggered,
      0) > as_timestamp(states.automation.emon_on.attributes.last_triggered, 0) }}'
  action:
  - service: notify.hotmail
    data:
      message: emon on at {{ as_timestamp(now()) | timestamp_custom('%H:%M') }}
      title: emon on
  mode: single
- id: '1637850937412'
  alias: emon Dryer done
  description: When dryer stops using power for 10 mins, notify done
  trigger:
  - type: value
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: sensor.emon_dryer_watts
    domain: sensor
    below: 500
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.emon_dryer_start.attributes.last_triggered,
      0) > as_timestamp(states.automation.emon_dryer_done.attributes.last_triggered,
      0) }}'
  action:
  - service: notify.mobile_app_susans10
    data:
      message: Dryer finished at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  - service: notify.mobile_app_grays10
    data:
      message: emon Dryer finished at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  variables:
    mins: 10
  mode: single
- id: '1637851106641'
  alias: emon EV Charge
  description: Notify when EV charge starts
  trigger:
  - type: value
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: sensor.emon_ev_watts
    domain: sensor
    for:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
    above: 500
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_on.attributes.last_triggered,
      0) | int > (2*60) }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_ev_charge.attributes.last_triggered,
      0) | int > (2*60*60) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon EV started at {{ (as_timestamp(now()) - 60) | timestamp_custom('%H:%M')
        }}
  mode: single
- id: '1637851283396'
  alias: emon EV Done
  description: Notify when EV charge finished
  trigger:
  - type: value
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: sensor.emon_ev_watts
    domain: sensor
    below: 500
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.emon_ev_charge.attributes.last_triggered,
      0) > as_timestamp(states.automation.emon_ev_done.attributes.last_triggered,
      0) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon EV finished at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  variables:
    mins: 10
  mode: single
- id: '1637917756279'
  alias: emon Dryer start
  description: Norify when dryer starts
  trigger:
  - type: value
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: sensor.emon_dryer_watts
    domain: sensor
    for:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
    above: 500
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_on.attributes.last_triggered,
      0) | int > (2*60) }}'
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_dryer_start.attributes.last_triggered,
      0) | int > (60*60) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon Dryer started at {{ (as_timestamp(now()) - 60) | timestamp_custom('%H:%M')
        }}
  mode: single
- id: '1639048082699'
  alias: emon running
  description: When emon went down, notify when running
  trigger:
  - type: connected
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: binary_sensor.emon_status
    domain: binary_sensor
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.emon_down.attributes.last_triggered,
      0) > as_timestamp(states.automation.emon_running.attributes.last_triggered,
      0) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon running at {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
  - service: notify.hotmail
    data:
      message: emon running at {{ as_timestamp(now()) | timestamp_custom('%H:%M')
        }}
      title: emon running
  mode: single
- id: '1639048178967'
  alias: emon down
  description: Notify when emon down
  trigger:
  - type: not_connected
    platform: device
    device_id: a51bb6533b14cc68c6d2d788401759c5
    entity_id: binary_sensor.emon_status
    domain: binary_sensor
    for:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.emon_down.attributes.last_triggered,
      0) | int > (2*60*60) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon down at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  - service: notify.hotmail
    data:
      message: emon down at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
      title: emon down
  variables:
    mins: 15
  mode: single
- id: '1643465768857'
  alias: emon Washing start
  description: Norify when washing starts
  trigger:
  - type: power
    platform: device
    device_id: 83972884d27fd61f8a582922acd63d77
    entity_id: sensor.athom_smart_plug_power
    domain: sensor
    above: 500
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition:
  - condition: template
    value_template: '

      {{ as_timestamp(now()) - as_timestamp(states.automation.emon_washing_start.attributes.last_triggered,
      0) | int > (60*60) }}'
  action:
  - service: notify.mobile_app_grays10
    data:
      message: emon Washing started at {{ (as_timestamp(now()) - 60) | timestamp_custom('%H:%M')
        }}
  mode: single
- id: '1643465875392'
  alias: emon Washing done
  description: When washing stops using power for 10 mins, notify done
  trigger:
  - type: power
    platform: device
    device_id: 83972884d27fd61f8a582922acd63d77
    entity_id: sensor.athom_smart_plug_power
    domain: sensor
    below: 20
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: template
    value_template: '{{ as_timestamp(states.automation.emon_washing_start.attributes.last_triggered,
      0) > as_timestamp(states.automation.emon_washing_done.attributes.last_triggered,
      0) }}'
  action:
  - service: notify.mobile_app_susans10
    data:
      message: Washing finished at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  - service: notify.mobile_app_grays10
    data:
      message: emon Washing finished at {{ (as_timestamp(now()) - mins*60) | timestamp_custom('%H:%M')
        }}
  variables:
    mins: 10
  mode: single
